# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller/'
    tags: [ 'controller.service_arguments' ]
  #listener response
  App\Listener\MiddlewareListener:
    tags:
      - { name: kernel.event_subscriber }
    arguments: ['@serializer']
  # context normalizer handler
  context.normalizer:
    class: App\Serializer\NormalizerContext
  # strategy normalizers
  response_api_normalizer:
    class: App\Serializer\Normalizer\ResponseApiNormalizer
    tags:
      - { name: strategy_normalizer }
  seller_normalizer:
    class: App\Serializer\Normalizer\SellerNormalizer
    tags:
      - { name: strategy_normalizer }
  #Normalizers strategies

  #Intrfaces Context strategies
  App\Serializer\NormalizerContextInterface: '@context.normalizer'
  #interfaces  factory implementations
  App\Manager\Seller\Factory\SellerFactoryManagerInterface: '@App\Manager\Seller\Factory\SellerFactoryManager'
  App\Manager\HttpSource\Client\ClientFactoryInterface: '@App\Manager\HttpSource\Client\Factory\ClientFactory'

  #interfaces  Manager implementations
  App\Manager\EntitySource\SellerEntityManagerInterface: '@App\Manager\EntitySource\SellerManager'
  App\Manager\HttpSource\SellerEntityManagerInterface: '@App\Manager\HttpSource\SellerManager'
  App\Manager\Seller\SellerManagerRequestAndStoreInterface: '@App\Manager\Seller\SellerManager'
  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
